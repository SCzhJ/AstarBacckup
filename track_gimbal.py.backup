#! /usr/bin/env python

import rospy
from geometry_msgs.msg import Twist
from tf2_msgs.msg import TFMessage
from std_msgs.msg import Bool
import math

gimb_z = 0.0
direction = 0.0
sight = False

def record_sight(msg):
    global sight
    sight = msg.data


def recordTF(msg):
    global gimb_z
    global direction
    if msg.transforms[0].child_frame_id == "gimbal":
        gimb_z = msg.transforms[0].transform.rotation.z
    if gimb_z > 0.0:
        direction = 1.0
    else:
        direction = -1.0


if __name__ == "__main__":
    rospy.init_node("track_gimbal")
    pub_vel = rospy.Publisher("/cmd_vel", Twist, queue_size=100)
    sub_sight = rospy.Subscriber("/armor_in_sight", Bool, record_sight, queue_size=100)
    sub_tf = rospy.Subscriber("/tf", TFMessage, recordTF, queue_size=100)

    deltaTime = 0.1
    msg = Twist()
    msg.linear.x = 0.0
    msg.linear.y = 0.0
    msg.angular.z = 0.0

    rate = rospy.Rate(1/deltaTime)

    while not rospy.is_shutdown():
        if sight is True:
            msg.angular.z = direction * math.sqrt(direction * gimb_z) * 3
            pub_vel.publish(msg)
            #rospy.loginfo(msg.angular.z)
        rate.sleep()
